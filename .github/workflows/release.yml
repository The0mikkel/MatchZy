name: Build and Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    outputs:
        MATCHZY_VERSION: ${{ steps.MATCHZY_VERSION.outputs.MATCHZY_VERSION }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0'

      - name: Get MatchZy Version
        id: MATCHZY_VERSION
        run: |
            MATCHZY_VERSION=$(grep -oP 'ModuleVersion\s*=>\s*"\K[^"]*' MatchZy.cs)
            echo "MATCHZY_VERSION=$MATCHZY_VERSION" >> $GITHUB_ENV

      - name: Build and Release Artifacts

        run: |
          CSSHARP_VERSION=$(grep -Po '<PackageReference Include="CounterStrikeSharp.API" Version="\K\d+(\.\d+)*' MatchZy.csproj | sed 's|1.0.||g')
          echo "Creating MatchZy base package with version: $MATCHZY_VERSION"
          dotnet publish -o package/addons/counterstrikesharp/plugins/MatchZy
          cp -r cfg package 
          cd package && zip -q -r ../MatchZy-$MATCHZY_VERSION.zip * && cd ..
    
          echo "Creating package with CounterStrikeSharp (CSSharp) v$CSSHARP_VERSION for Linux"
          cd package/
          echo "Installing CounterStrikeSharp (CSSharp) v$CSSHARP_VERSION"
          [ -e addons/counterstrikesharp ] && rm -rf addons/counterstrikesharp && echo "CounterStrikeSharp removed" || echo "old CounterStrikeSharp not found"
          curl -s https://api.github.com/repos/roflmuffin/CounterStrikeSharp/releases/tags/v$CSSHARP_VERSION |
              grep "/counterstrikesharp-with-runtime-build-$CSSHARP_VERSION-linux" |
              cut -d : -f 2,3 |
              tr -d \" |
              head -n 1 |
              wget -O cssharp-linux.zip -qi -
          unzip -o cssharp-linux.zip -d .
          rm cssharp-linux.zip
          cd ../

          dotnet publish -o package/addons/counterstrikesharp/plugins/MatchZy

          cd package && zip -q -r ../MatchZy-$MATCHZY_VERSION-with-cssharp-linux.zip * && cd ..

          rm -r package/*

          echo "Creating package with CounterStrikeSharp (CSSharp) v$CSSHARP_VERSION for Windows"
          cd package/
          echo "Installing CounterStrikeSharp (CSSharp) v$CSSHARP_VERSION"
          [ -e addons/counterstrikesharp ] && rm -rf addons/counterstrikesharp && echo "CounterStrikeSharp removed" || echo "old CounterStrikeSharp not found"
          curl -s https://api.github.com/repos/roflmuffin/CounterStrikeSharp/releases/tags/v$CSSHARP_VERSION |
              grep "/counterstrikesharp-with-runtime-build-$CSSHARP_VERSION-windows" |
              cut -d : -f 2,3 |
              tr -d \" |
              head -n 1 |
              wget -O cssharp-windows.zip -qi -
          unzip -o cssharp-windows.zip -d .
          rm cssharp-windows.zip
          cd ../

          dotnet publish -o package/addons/counterstrikesharp/plugins/MatchZy

          cd package && zip -q -r ../MatchZy-$MATCHZY_VERSION-with-cssharp-windows.zip * && cd ..

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.MATCHZY_VERSION }}
          draft: false
          prerelease: false
          files: |
            MatchZy-${{ env.MATCHZY_VERSION }}.zip
            MatchZy-${{ env.MATCHZY_VERSION }}-with-cssharp-linux.zip
            MatchZy-${{ env.MATCHZY_VERSION }}-with-cssharp-windows.zip